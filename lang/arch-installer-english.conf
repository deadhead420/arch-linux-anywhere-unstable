### arch-anywhere-english.conf
### By: Deadhead (Dylan Schacht)
###
### This is the language file for Arch Linux Anywhere.
### This file is sourced at the beginning of the install based of the language you select
### If you would like to help out in translating this file into your language you can easily do so by changing the variables
###
### Enter the name of the translator "By:" and any notes you would like to include in above comments
### Please save your finished translation in the following format:
###
### arch-installer-<language-here>.conf
###
### You may send any completed translations to the developer for it to be included in the next release:
###
### deadhead3492@gmail.com
###
### First change this variable to the correct utf-8 locale for your language.
### Example: en_GB.UTF-8, pt_PT.UTF-8, ru_RU.UTF-8, ro_RO.UTF-8

LANG="en_US.UTF-8"

### Important: Please be sure you are using UTF-8 encoding before beginning the translation!
### Do not change the variable names for example intro_msg=
### Do not remove any occurrence of \n or \n\n this tells program to create a new line and should not be changed
### Do not remove any special characters such as *, or quotes.
### Do not edit the names of the functions example main_msg() or remove any function brackets: { }
### Do not edit any variables within the text for example: /dev/$DRIVE and: $user
###
### You may translate any full words contained between the quotes ""
### Translations begin here:

main_msg() {

error="\Z1Error:\Zn"

yes="Yes"

no="No"

ok="Ok"

cancel="Cancel"

other="Other"

default="Default"

edit="Edit"

back="Back"

done_msg="Done"

partition="Partition"

size="Size"

add="Add"

install="Install"

mountpoint="Mount point"

custom="Custom"

write="Write-Changes"

none="None"

select="Select"

custom_msg="Enter a new custom mount point: \n\n $a Will be mounted under Root '/'"

custom_err_msg0="\n$error New mount point can't contain special characters..."

custom_err_msg1="\n$error New mount point can't be root mount point '/'"

write_confirm="Write changes to disk?"

intro_msg="Welcome to the Arch Linux Anywhere installer! \n\n $a Would you like to begin the install process?"

wifi_msg0="Wifi interface detected, would you like to connect?"

wifi_msg1="Unable to connect to wifi network, exiting installer."

connect_err0="$error No network connection exiting installer."

connect_err1=$(echo -e "\n ${Red}$error ${Yellow}You must be connected to the internet to install Arch Linux.\n Please check your connection and try again.\n\n Show connection info: \n\n    ${Green}ip add \n    ip link \n    wifi-menu ${ColorOff}\n\n")

locale_msg="Please select your desired locale:"

zone_msg0="Please enter your Time Zone:"

zone_msg1="Please enter your sub-zone:"

keys_msg="Select your key-map: \n\n $a If unsure leave default"

drive_msg="Auto Partition Drive:\n $a Select a drive to install Arch Linux onto \n $a NOTE: Selected drive will be formatted"

part_msg="Select your desired method of partitioning: \n\n $a NOTE Auto Partitioning will format the selected drive \n $a Press cancel to return to drive selection"

menu_msg="Return To Menu"

fs_msg="Select your desired filesystem type: \n\n $a Default is EXT4"

swap_msg0="Would you like to create SWAP space? \n\n $a (Recommend 512M - 1024M space on drive)"

swap_msg1="Specify your desired swap size: \n\n $a (Align to 'M' for MiB or 'G' for GiB):"

swap_err_msg0="$error not enough space on drive!"

swap_err_msg1="$error swap must end in 'M' for MiB or 'G' for GiB"

swap_err_msg2="\n$error failed turning on swap, try formatting first \n\n $a Returning to partition menu..."

efi_msg0="Would you like to enable UEFI bios? \n\n $a May not work on some systems \n $a Enable with caution"

gpt_msg="Would you like to use GPT partitioning? \n\n $a (GUID Partition Table)"

install_type_msg="Select the type of system you would like to install: \n\n $a If unsure use 'Base' or 'Base-devel'"

passwd_msg0="$error you must enter a password here."

passwd_msg1="Passwords do not match, please try again..."

part_err_msg="An error was detected during partitioning \n\n $a Returning partitioning menu"

part_err_msg1="Drive operations error. (mount/umount failure) \n\n Returning to menu..."

part_err_msg2="\n$error failed mounting device \n\n Returning to partition menu..."

manual_part_msg="Guided Manual Partition Drive: \n $a Select a drive to edit partition scheme \n $a Select a partition to edit the mount point \n $a Select 'Done' when finished"

root_err_msg="$error partition too small to be root partition. \n\n $a Root partition must be at least 4 GiB in size"

root_err_msg1="$error you must select a root partition before continuing with install."

write_confirm_msg="Confirm writing changes to disk:"

return_msg="\n ${Yellow}You have opened a new command line session.\n This enables you to run any custom commands from the installer.\n\n The Arch Anywhere installer is still running in the background\n Return to the install where you left off with the command: \n    ${Green}arch-anywhere\n    exit\n${ColorOff}"

arch_chroot_msg="\n ${Yellow}You have opened a new arch-anywhere-chroot session.\n This enables you to run commands on your newly installed system.\n\n Note: This is not a standard terminal emulator.\n Commands here are fed into installed system and the results displayed\n Up/down arrow history and most standard commands work \n To show this message again type: ${Green}help \n ${Yellow}You may install or search packages with the commands:\n\n    ${Green}pacman -S <install package(s) here>\n    pacman -Ss <search-package-here>\n\n ${Yellow}You may edit text files with nano or vim editors: \n\n    ${Green}nano /path/to/file\n    vim /path/to/file\n\n ${Yellow}The Arch Anywhere installer is still running in the background.\n Return to the installer with the command:\n\n    ${Green}arch-anywhere\n    exit\n${ColorOff}"

mirror_msg1="Please select your country code:"

wifi_option_msg="Install wireless utilities? Provides wifi support. \n\n $a Necessary for connecting to wifi \n $a Select yes if using wifi"

wifi_util_msg="Select your desired network utility: \n\n $a Default is netctl (select networkmanager for GUI)"

net_util_msg0="Netctl network utility (wifi-menu)"

net_util_msg1="NetworkManager Utility (nmcli)"

pppoe_msg="Include support for PPPoE DSL connections? \n\n $a Select yes if using PPPoE \n $a If unsure select No"

base_msg0="Base package group"

base_msg1="Base development group"

grsec_msg="GrSecurity hardened kernel"

LTS_msg0="Long term support kernel"

LTS_msg1="Long term support dev kernel"

os_prober_msg="Install os-prober? \n\n $a Required for multiboot \n $a If dual booting select yes"

grub_warn_msg0="Warning! System will not be bootable! \n\n $a You will need to configure a boot loader yourself \n $a Continue without a boot loader?"

grub_warn_msg1="After install is complete choose not to reboot, you may choose to keep the system mounted at /mnt allowing you to arch-chroot into it and configure your own boot loader."

syslinux_warn_msg="Installing syslinux in BIOS mode requires 64bit volume support to be disabled for boot partition.\n\n * Note: This will format your boot partition\n Continue disabling 64bit volume on boot partition?"

exit_msg="Ready to install system \n\n $a Are you sure you want to exit to menu?"

install_err_msg0="$error root filesystem already installed \n\n $a Continuing to menu."

install_err_msg1="$error no filesystem mounted \n\n $a Return to drive partitioning?"

install_err_msg2="$error no filesystem mounted \n\n $a Continuing to menu"

multilib_msg="64-bit architecture detected.\n\n $a Add multilib repos to pacman.conf? \n   (Allows installing 32-bit software on 64-bit system)"

dhcp_msg="Enable DHCP at boot? (Recommended)\n\n $a Dynamic Host Control Protocol \n   (Automatic IP address configuration)"

host_msg="Set your system hostname:\n\n $a Computer/host name \n $a No spaces or special characters"

host_err_msg="$error hostname must begin with letter and can't contain special characters. \n\n $a Please try again."

root_passwd_msg0="\nPlease enter a new root login password \n\n $a Password for root account login:"

root_passwd_msg1="\nEnter new root password again \n\n $a Root password again:"

user_exists_msg="Would you like to add a new user account? \n\n $a Select 'yes' to add a new user."

user_msg0="Create a new user account? \n\n $a (Recommended) Create a user now."

user_msg1="Set username: \n\n $a Lowercase letters and numbers only \n $a No capital letters or special characters"

user_err_msg="$error username must begin with letter and cannot contain special characters or uppercase letters. \n\n $a Please try again..."

graphics_msg="Select your desired graphics driver:\nDetected chipset: $chipset  \n\n $a If unsure use xf86-video-vesa or default"

desktop_cancel_msg="Are you sure you don't want a desktop? \n\n $a You will be booted into command line only."

nvidia_msg="Select your desired Nvidia driver: \n\n $a Cancel if none"

touchpad_msg="Would you like to install xf86-input touchpad drivers?  \n\n $a Required for laptop touchpad support."

desktop_msg="Would you like to install a desktop or window manager? \n\n $a Select 'yes' to install a desktop environment"

dm_msg="Would you like to install a display manager? \n\n $a Graphical login manager"

dm_msg1="Select your desired display manager:\n\n $a Default is lightdm"

environment_msg="Select your desired environment:"

startx_msg="Xinitrc file created. \n\n $a After login use the command 'startx' to access your desktop."

extra_msg0="Install xfce4 goodies? \n\n $a XFCE4 Extra programs"

extra_msg1="Install gnome extras? \n\n $a Gnome Extra programs"

extra_msg2="Install mate extras? \n\n $a Mate Extra programs"

extra_msg3="\n $a Install minimal plasma desktop?"

extra_msg4="Install deepin extras? \n\n $a Deepin Extra programs"

extra_msg5="Install xmonad-contrib? \n\n $a xmonad Extra programs"

extra_msg6="Install gnome group? \n\n $a gnome group programs"

software_msg0="Would you like to install some common software? \n\n $a Select yes for a list of additional software"

software_msg1="Choose your desired software: \n $a Use spacebar to check/uncheck software \n $a Press enter when finished"

software_type_msg="Select your desired software type \n\n $a Press 'install' when finished selecting software"

software_warn_msg="Are you sure you want to continue without any extra software? \n\n $a Press yes to continue without software."

software_noconfirm_msg="Are you sure you don't want any software from:"

complete_no_boot_msg="Install process complete! \n\n $a You did not configure a boot loader \n $a Return to the command line to configure?"

not_complete_msg="Install not complete, are you sure you want to reboot?"

complete_msg="Install completed successfully. \n\n $a What would you like to do now?"

part_frmt_msg="Would you like to format the selected partition? \n\n $a Select 'yes' to format partition. \n $a Select 'no' to mount without formating."

swap_frmt_msg="Would you like to format the swap space? \n\n $a Select yes to format new swap space. \n $a No to enable without formatting."

vbox_msg="VirtualBox guest install detected \n\n $a Installer will provide virtualbox-guest-utils."

vmware_msg="Vmware guest install detected \n\n $a Installer will provide xf86-video-vmware xf86-input-vmmouse open-vm-tools."

hyperv_msg="Hyper-v guest install detected \n\n $a Installer will provide xf86-video-fbdev."

vm_msg="Virtual machine guest install detected \n\n $a Installer will provide default drivers."

bluetooth_msg="Bluetooth support detected. \n\n $a Would you like to install bluez and bluez-utils? \n $a Required for bluetooth."

blueman_msg="Would you like to install blueman bluetooth manager? \n\n $a Select 'yes' to install graphical bluetooth manager."

btenable_msg="Enabling bluetooth..."

nwmanager_msg0="Enabling NetworkManager..."

nwmanager_msg1="Enabling netctl..."

vbox_enable_msg="Enabling virtualbox guest utils..."

efi_man_msg="EFI partition detected. \n\n $a Would you like to enable EFI boot?"

efi_err_msg="$error A mount point has already been created at '/boot' \n\n Please unmount and mount EFI partition as boot."

efi_err_msg1="$error Multiple EFI partitions found but not mounted. \n\n Please mount EFI partition at '/boot' and try again."

vfat_msg="EFI system partition detected. \n\n $a Vfat required to create bootable EFI partition."

loader_type_msg="Select your desired bootloader: \n\n $a Default is grub"

loader_msg="GRand Unified Bootloader"

loader_msg1="SysLinux Bootloader"

loader_msg2="Systemd Bootloader"

failed_msg="$error Failed to install packages to new root. \n\n $a Please check the file '/tmp/arch-anywhere.log' for more info."

shell_msg="Select your desired command shell \n\n * Default is bash"

nvidia_modeset_msg="Would you like to enable Nvidia DRM kernel mode setting? \n\n $a Direct Rendering Manager Kernel Module."

nvidia_340msg="Your chipset is supported by nvidia-340xx legacy drivers. \n\n $a Continue installing nvidia-340xx? graphics drivers"

nvidia_304msg="Your chipset is supported by nvidia-304xx legacy drivers. \n\n $a Continue installing nvidia-304xx graphics drivers?"

nvidia_curmsg="Your chipset is supported by the latest nvidia drivers. \n\n $a Continue installing nvidia graphics drivers?"

}

load_msg() {

wait_load="\n Please wait..."

connection_load="Please wait while we test your connection..."

boot_load="Creating boot partition..."

swap_load="Creating swap space..."

frmt_load="Formatting..."

mnt_load="Mounting..."

pv_load="Creating physical volumes"

lv_load="Creating logical volumes"

encrypt_load="Encrypting drive..."

mirror_load0="Retrieving new mirror list..."

mirror_load1="Please wait while ranking mirrors..."

efi_load1="Configuring efi boot..."

grub_load1="Installing grub to drive..."

grub_load2="Configuring grub..."

syslinux_load="Installing syslinux to drive..."

uefi_config_load="Please wait while configuring kernel for uEFI..."

f2fs_config_load="Please wait while configuring kernel for F2FS..."

kernel_config_load="Please wait while configuring kernel..."

encrypt_load1="Please wait while configuring kernel for encryption..."

dhcp_load="Enabling DHCP..."

dm_load="Enabling lightdm..."

pacman_load="Please wait while we update your pacman databases..."

keys_load="Please wait while updating pacman keyring..."

}

part_msg() {

method0="Auto Partition Drive"

method1="Auto partition encrypted LVM"

method2="Manual Partition Drive"

}

fs_msg() {

fs0="4th extended file system"

fs1="3rd extended file system"

fs2="2nd extended file system"

fs3="B-Tree File System"

fs4="Journaled File System"

fs5="Reiser File System"

fs6="F2FS File System"

fs7="VFAT/FAT32 File System"

}

graphics_msg() {

gr0="Auto Detect Drivers"

gr1="Vesa OpenSource Drivers"

gr2="NVIDIA Proprietary Drivers"

gr4="AMD/ATI Open Source Drivers"

gr5="Intel Open Source Drivers"

gr6="Latest stable nvidia drivers"

gr7="Legacy 340xx drivers branch"

gr8="Legaxy 304xx drivers branch"

gr9="Nvidia Open Source Drivers"

}

menu_msg() {

menu="Menu Items: \n\n $a Start a 'Command Line Session' to run custom commands\n $a Return to installer with 'arch-anywhere'"

menu0="Re-Set Locale"

menu1="Re-Set Timezone"

menu2="Re-Set Keymap"

menu3="Partition Drive"

menu4="Update Mirror list"

menu5="Install Base System"

menu11="Reboot System"

menu12="Exit Installer"

menu13="Command Line Session"

menu_err_msg3="Drive already mounted, ready to install system. \n\n $a Are you sure you want to return to partition menu?"

menu_err_msg4="System installed \n\n Exiting arch installer..."

menu_exit_msg="System not installed yet... \n\n Are you sure you want to exit?"

aar_add_msg="Would you like to add the Arch Anywhere custom repository to your pacman.conf? \n\n * Adds custom package repo"

aar="Arch Anywhere Repository"

aar_msg="AAR Software =>"

audio="Audio"

audio_msg="Audio Software =>"

graphic="Graphics"

graphic_msg="Graphics Software =>"

internet="Internet"

internet_msg="Internet Software =>"

multimedia="Multimedia"

multimedia_msg="Multimedia Software =>"

office="Office"

office_msg="Office Software =>"

terminal="Terminal"

terminal_msg="Terminal Emulators =>"

text_editor="Text Editors"

text_editor_msg="Text Editing Software =>"

system="System"

system_msg="System Utilities =>"

games="Games"

games_msg="Linux Games =>"

reboot0="Reboot System"

reboot1="Return To Command Prompt"

reboot2="Arch-Chroot Into Installed System"

reboot3="Add New User Account"

reboot5="Install Additional Software"

reboot6="Power Off System"

}

op_msg() {

welcome_op_msg=" -| Arch Linux Anywhere |- "

connection_op_msg=" -| Check Connection |- "

locale_op_msg=" -| Set Locale |- "

zone_op_msg=" -| Set Timezone |- "

key_op_msg=" -| Set Keymap |- "

part_op_msg=" -| Partition Drive |- "

partload_op_msg=" -| Partitioning Drive |- "

manual_op_msg=" -| Partition Menu |- "

edit_op_msg=" -| Edit Partition |- "

mirror_op_msg=" -| Update Mirrorlist |- "

install_op_msg=" -| Install System |- "

config_op_msg=" -| Configure System |- "

host_op_msg=" -| Set Hostname |- "

passwd_op_msg=" -| Set Password |- "

user_op_msg=" -| Add User |- "

de_op_msg=" -| Install Desktop |- "

software_op_msg=" -| Install Software |- "

complete_op_msg=" -| Install Complete |- "

menu_op_msg=" -| Main Menu |- "

}

var_msg() {

gtk3_var="Install $DE gtk3? \n\n $a (experimental version)"

drive_var="WARNING! Will erase all data on drive! \n\n $a Location: /dev/$DRIVE \n $a Size: $drive_gigs GiB \n $a Filesystem: $FS \n $a Would you like to continue?"

drive_var1="WARNING! Will erase all data on drive! \n\n $a Location: /dev/$DRIVE \n $a Size: $drive_gigs GiB \n $a Filesystem: $FS \n $a Swap space: $SWAPSPACE MiB \n $a Would you like to continue?"

drive_var2="WARNING! Will erase all data on drive! \n\n $a Location: /dev/$DRIVE \n $a Size: $drive_gigs GiB \n $a Filesystem: $FS \n $a Swap space $SWAPSPACE MiB \n $a Boot: UEFI \n $a Would you like to continue?"

drive_var3="WARNING! Will erase all data on drive! \n\n $a Location: /dev/$DRIVE \n $a Size: $drive_gigs GiB \n $a Filesystem: $FS \n $a Boot: UEFI \n $a Would you like to continue?"

encrypt_var0="Warning this will encrypt /dev/$DRIVE! \n\n $a Continue?"

encrypt_var1="\nPlease enter a new password for /dev/$DRIVE \n\n $a Note this password is used to unencrypt your drive at boot"

encrypt_var2="\nNew /dev/$DRIVE password again. \n\n $a Encryption password again:"

root_var="Create a new root mount point: \n $a Note: Root mount point must be created first. \n\n $a Partition: /dev/$part \n $a Size: $part_size \n\n Create new root mount point?"

manual_part_var0="Partition already mounted. \n\n $a Mount point: $part_mount \n $a Partition: /dev/$part \n $a Size: $part_size\n\n Edit to create new mount point"

manual_part_var1="Would you like to unmount partition: /dev/$part and remove $part_mount mount point? \n\n $a Note will unmount all partitions mounted under"

manual_part_var2="Warning: partition: /dev/$part is set as your root filesystem, this will erase all mount point under it. \n\n $a Are you sure you want to continue?"

manual_part_var3="Would you like to edit the partition scheme now? \n\n $a Drive: /dev/$part \n $a Size: $part_size \n\n Edit partition scheme? -Don't forget to 'write' changes"

manual_new_part_var="Would you like to create a new mount point? \n\n $a Partition: /dev/$part \n $a Size: $part_size \n\n Edit to create new mount point"

manual_swap_var="Would you like to remove SWAP filesystem from /dev/$part? \n\n $a Select 'yes' to remove SWAP filesystem."

mount_warn_var="Warning: disk /dev/$part contains mounted partitions. \n\n $a Would you like to unmount and edit partition scheme?"

mnt_var0="Select a new mount point for /dev/$part: \n\n $a Select 'custom' to create new mount point"

fs_err_var="$error A separate '/boot' partition must be setup when using an $FS filesystem. \n\n $a Returning to partition menu..."

install_var="Begin installing Arch Linux base system onto /dev/$DRIVE?\n\n $a Download size: $software_size \n $a Estimated install time: $down_min minutes.\n $a Estimated speed: $connection_speed $connection_rate \n $a Packages to add: \n\nbase $base_install"

user_var0="\nPlease enter a new login password for $user \n\n  $a New password for $user:"

user_var1="\nEnter new password for $user again \n\n $a $user password again:"

sudo_var="Enable sudo privilege for $user? \n\n $a Enables administrative privilege for $user."

root_confirm_var="Confirm creating mount point? \n\n $a Mount point: '/' Root File System \n $a Partition: /dev/$part \n $a Size: $part_size \n $a Filesystem: $FS \n\n Write changes to disk?"

part_confirm_var="Confirm creating mount point? \n\n $a Mount point: $mnt \n $a Partition: /dev/$part \n $a Size: $part_size \n $a Filesystem: $FS \n\n Write changes to disk?"

software_confirm_var0="Add the following packages to install list? \n\n $a Number of packages: $software_int \n $a Download size: $software_size \n $a Packages to add: \n\n$software_list"

software_confirm_var1="Proceed with installing software? \n\n $a Number of packages: $software_int \n $a Total download size: $software_size \n $a Estimated install time: $down_min minutes \n $a Estimated speed: $connection_speed $connection_rate \n $a Packages to install: \n\n$download_list"

efi_var="A mounted EFI system has been detected at $esp_part \n\n $a Would you like to enable EFI boot?"

vfat_var="The EFI system mounted at $esp_part does not contain a valid vfat filesystem. \n\n $a Would you like to format and create new vfat system?"

efi_mnt_var="The EFI partition detected at $esp_part has not been mounted. \n\n Mount EFI boot partition now?"

f2_err_var="$error You must create a separate boot partition in order to use an $FS filesystem. \n\n $a Returning to partition menu..."

}

load_var_msg() {

load_var0="Partitioning /dev/$DRIVE..."

load_var1="Please wait while creating $FS filesystem..."

install_load_var="$h\nInstalling Arch Linux to: /dev/$DRIVE \n\n $a Download size: $software_size"

software_load_var="$h\nInstalling additional software \n\n $a Download size: $software_size"

locale_load_var="Generating $LOCALE locale..."

zone_load_var="Setting timezone $ZONE..."

}

#####################################################################
### END TRANSLATION ##################################################
### DO NOT EDIT BELOW THIS LINE! ########################################
####################################################################
a="\Z2*\Zn"
h="\Z2<\Z1#\Z2>\Zn"

if "$reload" ; then
	var_msg
	load_var_msg
else
	main_msg
	load_msg
	part_msg
	fs_msg
	graphics_msg
	menu_msg
	op_msg
fi
